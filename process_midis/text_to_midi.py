import midi
import argparse

'''
Idea: In order to manually examine how much of the musical content
is being conveyed by the textual chords, this tools allows you
to listen to the sound produced by playing the chords in the sound file.
'''

DIGITS_PER_CHORD = 3
TICKS_PER_NOTE = 50

def string_to_pitches(ch_str):
    pitches = [int(ch_str[x:x+DIGITS_PER_CHORD]) for x in range(0,len(ch_str),DIGITS_PER_CHORD)]
    return pitches

def verify_string(ch_str):
    return (ch_str.isdigit() and
            len(ch_str) % DIGITS_PER_CHORD == 0 and
            all(pitch >= 0 and pitch < 128
                for pitch in string_to_pitches(ch_str)))

def verify_text_file(text):
    return all(verify_string(ch_str) for ch_str in text.split())

def text_to_chords(text):
    if not verify_text_file(text):
        raise RuntimeError("text file formatted badly. Are you sure this was generated by the latest version of midi_to_text.py?")
    chord_strs = text.split()
    pitchs_list = [string_to_pitches(ch_str) for ch_str in chord_strs]
    return pitchs_list

def chord_to_note_list(pitchs_list,item_num):
    # Instantiate a MIDI note on event, append it to the track
    on_notes = [midi.NoteOnEvent(tick=(item_num)*TICKS_PER_NOTE, velocity=80, pitch=p) for p in pitchs_list]
    off_notes = [midi.NoteOffEvent(tick=(item_num+1)*TICKS_PER_NOTE, velocity=0, pitch=p) for p in pitchs_list]
    return on_notes + off_notes

def chords_to_notes(chords):
    return [note for i in range(len(chords))
                 for note in chord_to_note_list(chords[i],i)]

def note_list_to_song(note_list):
    pattern = midi.Pattern()
    # Instantiate a MIDI Track (contains a list of MIDI events)
    track = midi.Track(note_list)
    eot = midi.EndOfTrackEvent(tick=1)
    track.append(eot)
    pattern.append(track)
    return pattern

def write_song(filename, song):
    midi.write_midifile(filename, song)

def read_text_file(filename):
    with open(filename) as textfile:
        return textfile.read()

def song_convert(text_filename,midi_filename):
    chords = text_to_chords(read_text_file(text_filename))
    full_note_list = chords_to_notes(chords)
    song = note_list_to_song(full_note_list)
    write_song(midi_filename,song)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Turn a .txt file formatted by midi_to_text.py into a midi file")
    parser.add_argument('text_file', help='Path to .txt file to process')
    parser.add_argument('midi_file', help='output .mid file path')

    args = parser.parse_args()
    song_convert(args.text_file,args.text_file)
